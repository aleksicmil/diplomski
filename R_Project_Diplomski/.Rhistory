str(a)
droplevels.data.frame(a)
str(a)
?droplevels.data.frame
rm(list = ls())
go <- "GO:0005739"
radni <- read.table("Data/radni_dataset.txt", sep = "\t", header = T)
frenki <- read.table("Data/FRENKI_predikcije_mapirano.txt",
header = T,
sep = "\t")
frenki.mito <- frenki[frenki$Predikcija == go, ]
droplevels(frenki.mito)$UniProt
frenki.mito <- frenki[frenki$Predikcija == go, ]
str(frenki.mito)
droplevels(frenki.mito)$UniProt
str(frenki.mito)
droplevels(frenki.mito)$UniProt
str(frenki.mito)
frenki.mito <- droplevels(frenki.mito)$UniProt
frenki.mito <- frenki[frenki$Predikcija == go, ]
levels(frenki.mito$UniProt) <- droplevels(frenki.mito)$UniProt
frenki.mito$UniProt <- droplevels(frenki.mito)$UniProt
View(frenki.mito)
frenki.mito <- frenki[frenki$Predikcija == go, ]
str(frenki.mito)
frenki.mito[frenki.mito$UniProt == "T96060000168"]
frenki.mito[frenki.mito$UniProt == "T96060000168", ]
frenki.mito[frenki.mito$CAFA == "T96060000168", ]
frenki.mito$UniProt <- droplevels(frenki.mito)$UniProt
frenki.mito[frenki.mito$CAFA == "T96060000168", ]
str(frenki.mito)
# Izbacivanje CAFA training dataseta iz frenki.mito
cafa <- read.table("Data/trening_cafa_C_ext.txt", header = F, sep = "\t")
names(cafa) <- c("UniProt", "Predikcija")
cafa.mito <- cafa[cafa$UniProt == go, ]
names(cafa.mito) <- c("UniProt", "Predikcija")
rm(frenki)
rm(cafa)
cafa <- read.table("Data/trening_cafa_C_ext.txt", header = F, sep = "\t")
names(cafa) <- c("UniProt", "Predikcija")
cafa.mito <- cafa[cafa$UniProt == go, ]
cafa <- read.table("Data/trening_cafa_C_ext.txt", header = F, sep = "\t")
names(cafa) <- c("UniProt", "Predikcija")
cafa.mito <- cafa[cafa$UniProt == go, ]
View(cafa.mito)
View(cafa)
cafa.mito <- cafa[cafa$Predikcija == go, ]
dim(frenki.mito)[1, ] == dim(levels(frenki.mito$UniProt))
dim(frenki.mito)
dim(frenki.mito)[1, 1] == dim(levels(frenki.mito$UniProt))
dim(frenki.mito)[1, 1]
dim(dim(frenki.mito))
dim(frenki.mito)[1]
dim(levels(frenki.mito$UniProt))
dim(levels(frenki.mito$UniProt))[1]
dim(frenki.mito)[1] == length(levels(frenki.mito$UniProt))
length(levels(frenki.mito$UniProt))
dim(frenki.mito)[1] > length(levels(frenki.mito$UniProt))
?duplicated
x <- c(9:20, 1:5, 3:7, 0:8)
x
duplicated(x)
xu <- x[!duplicated(x)]
xu
(xu2 <- x[!duplicated(x, fromLast = TRUE)])
frenki.mito <- frenki.mito[!duplicated(frenki.mito$UniProt), ]
dim(frenki.mito)[1] > length(levels(frenki.mito$UniProt))
dim(frenki.mito)[1]
length(levels(frenki.mito$UniProt))
sum(duplicated(frenki.mito$UniProt))
frenki.mito <- frenki.mito[!duplicated(frenki.mito$UniProt), ]
dim(frenki.mito)[1] > length(levels(frenki.mito$UniProt))
table(frenki.mito$UniProt[1:10])
table(frenki.mito$UniProt)
View(frenki.mito)
sum(frenki.mito$Skor)
levels(frenki.mito$UniProt)
str(frenki.mito)
levels(frenki.mito$UniProt)
str(frenki.mito)
unique(frenki.mito$UniProt)
iris
duplicated(iris)
duplicated(iris)[140:143]
iris3
duplicated(iris)
duplicated(iris3)
duplicated(iris3, MARGIN = C(1, 3))
duplicated(iris3, MARGIN = c(1, 3))
anyDuplicated(iris)
anyDuplicated(frenki.mito)
anyDuplicated(frenki.mito$UniProt)
str(frenki.mito)
frenki.mito <- frenki.mito[-(frenki.mito$UniProt == NA), ]
frenki.mito <- frenki.mito[!(is.na(frenki.mito$UniProt)), ]
# Frenki predikcije. Izdvojeni proteini za koje je predvidjeno da su mito (3163)
frenki <- read.table("Data/FRENKI_predikcije_mapirano.txt",
header = T,
sep = "\t")
frenki.mito <- frenki[frenki$Predikcija == go, ]
frenki.mito$UniProt <- droplevels(frenki.mito)$UniProt
dim(frenki.mito)[1] > length(levels(frenki.mito$UniProt))
frenki.mito <- frenki.mito[!duplicated(frenki.mito$UniProt), ]
is.na(frenki.mito$UniProt
)
sum(is.na(frenki.mito$UniProt))
!(is.na(frenki.mito$UniProt))
frenki.mito <- frenki.mito[!(is.na(frenki.mito$UniProt))]
frenki.mito <- frenki.mito[!(is.na(frenki.mito$UniProt)), ]
rm(x, xu, xu2)
a <- (1, 2, 3)
a <- c(1, 2, 3)
b <- c(1)
intersect(a, b)
intersect(frenki.mito, cafa,mito)
intersect(frenki.mito, cafa.mito)
intersect(frenki.mito$UniProt, cafa.mito$UniProt)
presek <- intersect(frenki.mito$UniProt, cafa.mito$UniProt)
presek <- as.data.frame(intersect(frenki.mito$UniProt, cafa.mito$UniProt))
View(presek)
names(presek) <- c("UniProt")
(x <- c(sort(sample(1:20, 9)), NA))
(y <- c(sort(sample(3:23, 7)), NA))
union(x, y)
intersect(x, y)
setdiff(x, y)
setdiff(y, x)
setequal(x, y)
x <- c(1, 2, 3, 4)
y <- c(2, 3, 4, 5)
setdiff(x, y)
setdiff(y, x)
y <- c(3, 4)
setdiff(x, y)
setdiff(y, x)
y <- (22)
y <- c(22)
setdiff(x, y)
setdiff(y, x)
(frenki.mito$UniProt %in% cafa.mito$UniProt)
!(frenki.mito$UniProt %in% cafa.mito$UniProt
)
frenki.mito <- frenki.mito[!(frenki.mito$UniProt %in% cafa.mito$UniProt), ]
tp <- intersect(radni$Protein, frenki.mito$UniProt)
tp <- as.data.frame(intersect(radni$Protein, frenki.mito$UniProt))
View(tp)
names(tp) <- c("UniProt")
fp <- as.data.frame(setdiff(frenki.mito$UniProt, tp$UniProt))
47+2715
t.pos <- as.data.frame(intersect(radni$Protein, frenki.mito$UniProt)) # tp=47
names(t.pos) <- c("UniProt")
tp <- dim(t.pos)
tp <- dim(t.pos)[1]
f.pos <- as.data.frame(setdiff(frenki.mito$UniProt, t.pos$UniProt)) # fp=2715
fp <- dim(f.pos)[1] # fp=2715
f.neg <- as.data.frame(setdiff(radni$Protein, t.pos$UniProt))
fn <- dim(f.neg)[1]
2398+47
duplicated(radni$Protein)
anyDuplicated(radni$Protein)
anyDuplicated(frenki[frenki$Predikcija == go, ]$Uniprot1)
anyDuplicated(frenki[frenki$Predikcija == go, ]$UniProt2)
anyDuplicated(frenki[frenki$Predikcija == go, ]$UniProt)
radni.uni <- radni[!(duplicated(radni$Protein)), ]
2445-2827
2827-2445
sum(duplicated(radni$Protein))
levels(radni$Protein)
radni.uni <- droplevels(radni.uni$Protein)
radni.uni <- radni[!(duplicated(radni$Protein)), ]
radni.uni$Protein <- droplevels(radni.uni)$Protein
View(radni.uni)
f.neg <- as.data.frame(setdiff(radni.uni$Protein, t.pos$UniProt))
fn <- dim(f.neg)[1] # fn = 2398
t.pos <- as.data.frame(intersect(radni.uni$Protein, frenki.mito$UniProt))
names(t.pos) <- c("UniProt")
tp <- dim(t.pos)[1] # tp = 47
f.pos <- as.data.frame(setdiff(frenki.mito$UniProt, t.pos$UniProt))
fp <- dim(f.pos)[1] # fp = 2715
f.neg <- as.data.frame(setdiff(radni.uni$Protein, t.pos$UniProt))
precision <- tp/(tp+fn)
prec <- tp/(tp+fn)
rm(precision)
prec <- tp/(tp+fp)
rec <- tp/(tp+fn)
f <- 2*prec*rec/(prec+rec)
sum(duplicated(radni$Protein))
anyDuplicated(radni$Protein)
View(radni)
sum(duplicated(frenki$UniProt))
47+2715
7+2398
47+2398
rm(list = ls())
# impi sa mitominera
impi <- read.table("Data/impi_mitominer.tsv", sep = "\t", header = F,
col.names = c("Protein", "Gene.ID", "Gene", "Status"))
View(impi)
sum(duplicated(impi))
View(impi)
View(impi$Protein)
sum(duplicated(impi$Protein))
anyDuplicated(impi$Protein)
str(impi)
3650+1755
View(impi[duplicated(impi$Protein), ])
# svi geni u impiju
impi_genes <- as.data.frame(levels(impi$Gene.ID))
# cafa training set
cafa <- read.table("Data/trening_cafa_C_ext.txt", header = F, sep = "\t",
col.names = c("Protein", "Ontology"))
# lista svih proteina u cafi posto se u cafa ponavljaju zbog ontologija
cafa_proteini <- as.data.frame(levels(cafa$Protein))
cafa_proteini[, 2] <- cafa_proteini[, 2] <- "Da"
names(cafa_proteini) <- c("Protein", "CAFA")
# listi impi proteina dodaje informaciju da li su u cafa training datasetu
impi_u_cafi <- merge(impi, cafa_proteini, by = "Protein", all.x = T)
table(impi_u_cafi$CAFA == "Da")
write.table(impi_u_cafi, "Data/impi_info_u_cafi.txt", sep = "\t", quote = F,
col.names = T, row.names = F)
# pravi listu proteina iy impija koji su u cafa training daatsetu
u_cafi <- subset(impi_u_cafi, impi_u_cafi$CAFA == "Da")
write.table(u_cafi, "Data/samo_impi_u_cafi.txt", sep = "\t", quote = F,
col.names = T, row.names = T)
radni <- subset(impi_u_cafi, is.na(impi_u_cafi$CAFA == "Ne"))
View(radni[duplicated(radni$Protein), ])
rm(list = ls())
frenki <- read.table("Data/FRENKI_CC_predikcije_propagirano.txt", header = F,
sep= "\t", col.names = c("CAFA", "Predikcija", "Skor"))
rm(frenki)
pan <- read.table("Data/pannzer_rezultati.txt", sep = "\t", header = T)
View(pan)
pan_cc <- subset(pann, pann$type == "CC_ARGOT")
pan_cc <- subset(pan, pan$type == "CC_ARGOT")
View(pan_cc)
pan.cc <- subset(pan, pan$type == "CC_ARGOT")
rm(pan_cc)
pan.mito <- pan.cc[pan.cc$id == "0005739", ]
View(pan.mito)
rm(list = ls())
pan <- read.table("Data/pannzer_go_rezultati.txt", sep = "\t", header = T)
View(pan)
pan.cc <- subset(pan, pan$ontology == "CC")
pan.mito <- pan.cc[pan.cc$id == "5739", ]
pan.mito <- pan.cc[pan.cc$goid == "5739", ]
View(pan.mito)
panz<- pan
for (i in c(1: length(panz$qpid))){
a = length(panz[i, 1])
panz[i, 1] = panz[i, 1][c(1:a)]
}
panz<- pan
for (i in c(1: length(panz$qpid))){
a = length(panz[i, 1])
panz[i, 1] = panz[i, 1][c(11:a)]
}
pan <- read.table("Data/pannzer_go_rezultati.txt", sep = "\t", header = T)
panz<- pan
for (i in c(1: length(panz$qpid))){
a = length(panz[i, 1])
panz[i, 1] = panz[i, 1][c(11:a)]
}
panz[i, 1]
panz[i, 1]
panz$qpid <- as.character(panz$qpid)
for (i in c(1: length(panz$qpid))){
a = length(panz[i, 1])
panz[i, 1] = panz[i, 1][c(11:a)]
}
panz[i, 1]
length(panz[i, 1])
length(panz$qpid
)
nchar(panz[i, 1])
for (i in c(1: length(panz$qpid))){
a = nchar(panz[i, 1])
panz[i, 1] = panz[i, 1][c(11:a)]
}
panz[i, 1]
panz[i, 1][c(11:a)]
panz[i, 1],
panz[i, 1]
substr(panz[i, 1], 11, a)
?regexpr
?Control
a <- ..
my_array <- ..
?array
array(c(1, 2, 3), c(3, 3))
array(c(1, 2, 3), c(3, 3))
array(c(1:3), c(3, 3))
array(c(1:3), c(3, 4))
array(c(1:3), c(5, 4))
_repeat
?repeat
?repeat{}
a <- read.table("Data/pannzer_go_rezultati.txt", header = T, sep = "\t")
a <- read.table("Data/pannzer_go_rezultati.txt", header = T, sep = "\t")
View(a)
a$qpid <- a$qpid[1:3]
str(a)
a$ARGOT_rank <- a$ARGOT_rank + 1
View(a)
a <- read.table("Data/pannzer_go_rezultati.txt", header = T, sep = "\t")
a$qpid <- as.character(a$qpid)
a$qpid <- a$qpid[1:3]
?string
??string
fun <- function(x){
x*x
}
b <- fun(x)
b <- fun(5)
fun <- function(x){
b <- x+1
b*b
}
c <- fun(5)
?grep
str1 <- "123123"
str2 <- "1"
sh <- regexpr(str2, str1, )
sh
sh[1]
sh <- regexpr(str2, str1)
sh
x <- 'abcdefghijklmabcu'
y <- gregexpr('ab', x)
regmatches(x, y)
sh <- grep(str2, str1)
str1 <- "23123"
sh <- grep(str2, str1)
str1 <- "111123123"
str2 <- "1"
sh <- grep(str2, str1)
sh
sh <- grep(str2, str1, value = F)
sh <- grep(str2, str1, value = F)
sh <- grep(str2, str1, value = T)
sh <- grep(str1, str2, value = T)
sh <- grep(str2, str1, value = T)
sh <- grep(str2, str1, value = F)
str1 <- "aaaab"
str2 <- "a"
sh <- grep(str2, str1, value = F)
str1 <- "ba"
str2 <- "a"
sh <- grep(str2, str1, value = )
sh <- grep(str2, str1, value = F)
?match
sh <- match(str2, str1)
sh <- grep(str2, str1, fixed = T)
str1 <- "baaaaaa"
str2 <- "a"
sh <- grep(str2, str1, fixed = T)
sh <- regexpr(str2, str1)
sh
library(stringr)
pan <- read.table("Data/pannzer_go_rezultati.txt", sep = "\t", header = T)
panz <- pan
panz$qpid <- as.character(panz$qpid)
ime <- function(x) {
m1 <- regexpr("|", x, fixed = T)[1]
x1 <- x[m1+1:length(x)]
m2 <- regexpr("|", x1, fixed = T)[1]
x[m1:m2]
}
prvi <- panz$qpid[1]
proba <- ime(prvi)
m1 <- regexpr("|", prvi, fixed = T)[1]
x1 <- prvi[m1+1:length(prvi)]
length(prvi)
x1 <- prvi[m1+1:nchar(prvi)]
nchar(prvi)
prvi[c(m1+1:nchar(prvi))]
?substr
x1 <- substr(prvi, m1+1, nchar(prvi))
m2 <- regexpr("|", x1, fixed = T)[1]
substr(prvi, m1, m2)
substr(prvi, m1+1, m2)
substr(prvi, m1+1, m2+2)
ime <- function(x) {
m1 <- regexpr("|", x, fixed = T)[1]
x1 <- substr(x, m1+1, nchar(x))
m2 <- regexpr("|", x1, fixed = T)[1]
substr(x, m1+1, m2+2)
}
prvi <- panz$qpid[1]
proba <- ime(prvi)
panz$qpid <- ime(panz$qpid)
View(panz)
panz <- pan
panz$qpid <- as.character(panz$qpid)
panz$Protein <- ime(panz$qpid)
View(panz)
panz <- panz[, c(1, 8, 2:7)]
prvi <- panz$qpid[5939]
m1 <- regexpr("|", prvi, fixed = T)[1]
x1 <- substr(prvi, m1+1, nchar(prvi))
m2 <- regexpr("|", x1, fixed = T)[1]
prvi[3]
substr(prvi, 3, 5)
m1 <- regexpr("|", prvi, fixed = T)[1]
x1 <- substr(prvi, m1+1, nchar(prvi))
m2 <- regexpr("|", x1, fixed = T)[1]
res <- substr(prvi, regexpr("|", prvi, fixed = T)[1],
regexpr("|", prvi, fixed = T)[1])
m1 <- gregexpr("|", prvi, fixed = T)[1]
m1 <- gregexpr("|", prvi, fixed = T)
m1
m1[1]
m1[[1], 1]
m1[[1]]
m1[[1]][1]
m1[[1]][2]
substr(prvi, m1[[1]][1], m1[[1]][2])
substr(prvi, m1[[1]][1]+1, m1[[1]][2]-1)
pan <- read.table("Data/pannzer_go_rezultati.txt", sep = "\t", header = T)
panz <- pan
panz$qpid <- as.character(panz$qpid)
ime <- function(x) {
m1 <- gregexpr("|", prvi, fixed = T)
substr(prvi, m1[[1]][1]+1, m1[[1]][2]-1)
}
panz$Protein <- ime(panz$qpid)
panz <- panz[, c(1, 8, 2:7)]
panz <- pan
panz$qpid <- as.character(panz$qpid)
ime <- function(x) {
m1 <- gregexpr("|", x, fixed = T)
substr(x, m1[[1]][1]+1, m1[[1]][2]-1)
}
panz$Protein <- ime(panz$qpid)
panz <- panz[, c(1, 8, 2:7)]
rm(list = ls())
pan <- read.table("Data/pannzer_go_rezultati.txt", sep = "\t", header = T)
panz <- pan
panz$qpid <- as.character(panz$qpid)
ime <- function(x) {
m1 <- gregexpr("|", x, fixed = T)
substr(x, m1[[1]][1]+1, m1[[1]][2]-1)
}
View(pan)
View(ime)
View(ime)
panz$Protein <- ime(panz$qpid)
panz <- panz[, c(1, 8, 2:7)]
View(panz)
panz <- pan
panz$qpid <- as.character(panz$qpid)
ime <- function(x) {
m1 <- gregexpr("|", x)
substr(x, m1[[1]][1]+1, m1[[1]][2]-1)
}
panz$Protein <- ime(panz$qpid)
panz <- panz[, c(1, 8, 2:7)]
m1 <- gregexpr("|", x, fixed = T)
ime <- function(x) {
m1 <- gregexpr("|", x, fixed = T)
substr(x, m1[[1]][1]+1, m1[[1]][2]-1)
}
panz$Protein <- ime(panz$qpid)
panz <- panz[, c(1, 8, 2:7)]
for(i in 1:9325){
panz$Protein[i] <- ime(panz$qpid[i])
}
rm(list = ls())
pan <- read.table("Data/pannzer_go_rezultati.txt", sep = "\t", header = T)
pan$qpid <- as.character(panz$qpid)
ime <- function(x) {
m1 <- gregexpr("|", x, fixed = T)
substr(x, m1[[1]][1]+1, m1[[1]][2]-1)
}
length(pan$qpid)
for(i in 1:length(pan$qpid)){
pan$Protein[i] <- ime(pan$qpid[i])
}
panz <- panz[, c(1, 8, 2:7)]
pan <- pan[, c(1, 8, 2:7)]
View(pan)
go <- 5739
pan.mito <- pan[pan$ontology == go, ]
pan.mito <- pan[pan$goid == go, ]
View(pan.mito)
pan.mito$Protein <- droplevels(pan.mito)$Protein
View(pan.mito)
levels(pan.mito$Protein)
pan.mito$Protein <- as.factor(pan.mito$Protein)
pan.mito$Protein <- droplevels(pan.mito)$Protein
levels(pan.mito$Protein)
radni <- read.table("Data/radni_dataset.txt", header = T, sep = "\t")
radni <- radni[!duplicated(radni$Protein), ]
t.pos <- as.data.frame(intersect(radni$Protein, pan.mito$Protein))
View(t.pos)
tp <- length(t.pos)
tp <- length(t.pos)[,1]
tp <- dim(t.pos)[1]
f.pos <- as.data.frame(setdiff(pan.mito$Protein, radni$Protein))
fp <- dim (f.pos)[1]
f.neg <- as.data.frame(setdiff(radni$Protein, pan.mito$Protein))
fn <- dim(f.neg)[1]
prec <- tp/(tp+fp)
rec <- tp/(tp+fn)
f <- 2*prec*rec/(prec+rec)
names(tp) <- c("Protein")
tp <- dim(t.pos)[1]
names(t.pos) <- c("Protein")
pog <- radni[radni$Protein %in% t.pos$Protein, ]
View(pog)
barplot(pog$Status)
table(pog$Status)
barplot(table(pog$Status))
